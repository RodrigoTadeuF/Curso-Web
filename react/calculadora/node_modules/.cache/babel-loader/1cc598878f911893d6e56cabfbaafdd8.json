{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Rodrigo Tadeu\\\\Desktop\\\\exercicios-web\\\\react\\\\calculadora\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rodrigo Tadeu\\\\Desktop\\\\exercicios-web\\\\react\\\\calculadora\\\\src\\\\main\\\\Calculator.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './Calculator.css';\nimport Button from '../components/Button';\nimport Display from '../components/Display';\nconst initialState = {\n  displayValue: '0',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0\n};\nexport default class Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, initialState);\n    this.clearMemory = this.clearMemory.bind(this);\n    this.setOperation = this.setOperation.bind(this);\n    this.addDigit = this.addDigit.bind(this);\n  }\n\n  clearMemory() {\n    this.setState(_objectSpread({}, initialState));\n  }\n\n  setOperation(operation) {\n    if (this.state.current === 0) {\n      this.setState({\n        operation,\n        current: 1,\n        clearDisplay: true\n      });\n    } else {\n      const equals = operation === '=';\n      const currentOperation = this.state.operation;\n      const values = [...this.state.values];\n\n      try {\n        values[0] = eval(\"\".concat(values[0], \" \").concat(currentOperation, \" \").concat(values[1]));\n      } catch (e) {\n        values[0] = this.state.values[0];\n      }\n\n      values[1] = 0;\n      this.setState({\n        displayValue: values[0],\n        operation: equals ? null : operation,\n        current: equals ? 0 : 1,\n        clearDisplay: !equals,\n        values\n      });\n    }\n  }\n\n  addDigit(n) {\n    if (n === '.' && this.state.displayValue.includes('.')) {\n      return;\n    }\n\n    const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay;\n    const currentValue = clearDisplay ? '' : this.state.displayValue;\n    const displayValue = currentValue + n;\n    this.setState({\n      displayValue,\n      clearDisplay: false\n    });\n\n    if (n !== '.') {\n      const i = this.state.current;\n      const newValue = parseFloat(displayValue);\n      const values = [...this.state.values];\n      values[i] = newValue;\n      this.setState({\n        values\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Display, {\n      value: this.state.displayValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"AC\",\n      click: this.clearMemory,\n      triple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"/\",\n      click: this.setOperation,\n      operation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"7\",\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"8\",\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"9\",\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"*\",\n      click: this.setOperation,\n      operation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"4\",\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"5\",\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"6\",\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"-\",\n      click: this.setOperation,\n      operation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"1\",\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"2\",\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"3\",\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"+\",\n      click: this.setOperation,\n      operation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"0\",\n      click: this.addDigit,\n      double: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \".\",\n      click: this.addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"=\",\n      click: this.setOperation,\n      operation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Rodrigo Tadeu\\Desktop\\exercicios-web\\react\\calculadora\\src\\main\\Calculator.jsx"],"names":["React","Component","Button","Display","initialState","displayValue","clearDisplay","operation","values","current","Calculator","constructor","props","state","clearMemory","bind","setOperation","addDigit","setState","equals","currentOperation","eval","e","n","includes","currentValue","i","newValue","parseFloat","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './Calculator.css'\r\n\r\nimport Button from '../components/Button'\r\nimport Display from '../components/Display'\r\n\r\nconst initialState = {\r\n    displayValue: '0',\r\n    clearDisplay: false,\r\n    operation: null,\r\n    values: [0, 0],\r\n    current: 0\r\n}\r\n\r\nexport default class Calculator extends Component {\r\n\r\n    state = { ...initialState }\r\n\r\nconstructor (props) {\r\n    super(props)\r\n    this.clearMemory = this.clearMemory.bind(this)\r\n    this.setOperation = this.setOperation.bind(this)\r\n    this.addDigit = this.addDigit.bind(this)\r\n}\r\n\r\n    clearMemory() {\r\n        this.setState({ ...initialState })\r\n    }\r\n\r\n    setOperation(operation) {\r\n            if (this.state.current === 0) {\r\n                this.setState({ operation, current: 1, clearDisplay: true })\r\n            } else {\r\n                const equals = operation === '='\r\n                const currentOperation = this.state.operation\r\n    \r\n                const values = [...this.state.values]\r\n                try {\r\n                    values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\r\n                } catch(e) {\r\n                    values[0] = this.state.values[0]\r\n                }\r\n    \r\n                values[1] = 0\r\n    \r\n                this.setState({\r\n                    displayValue: values[0],\r\n                    operation: equals ? null : operation,\r\n                    current: equals ? 0 : 1,\r\n                    clearDisplay: !equals,\r\n                    values\r\n                })\r\n            }\r\n        }\r\n\r\n    addDigit(n){\r\n        if (n === '.' && this.state.displayValue.includes('.')){\r\n            return\r\n        }\r\n\r\n        const clearDisplay = this.state.displayValue === '0'\r\n            || this.state.clearDisplay\r\n        const currentValue = clearDisplay ? '' : this.state.displayValue\r\n        const displayValue = currentValue + n\r\n        this.setState({ displayValue, clearDisplay: false })\r\n\r\n        if (n !== '.') {\r\n            const i = this.state.current\r\n            const newValue = parseFloat(displayValue)\r\n            const values = [...this.state.values]\r\n            values[i] = newValue\r\n            this.setState({ values })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calculator\">\r\n                <Display value={this.state.displayValue} />\r\n                <Button label=\"AC\" click={this.clearMemory} triple />\r\n                <Button label=\"/\" click={this.setOperation} operation />\r\n                <Button label=\"7\" click={this.addDigit} />\r\n                <Button label=\"8\" click={this.addDigit} />\r\n                <Button label=\"9\" click={this.addDigit} />\r\n                <Button label=\"*\" click={this.setOperation} operation />\r\n                <Button label=\"4\" click={this.addDigit} />\r\n                <Button label=\"5\" click={this.addDigit} />\r\n                <Button label=\"6\" click={this.addDigit} />\r\n                <Button label=\"-\" click={this.setOperation} operation />\r\n                <Button label=\"1\" click={this.addDigit} />\r\n                <Button label=\"2\" click={this.addDigit} />\r\n                <Button label=\"3\" click={this.addDigit} />\r\n                <Button label=\"+\" click={this.setOperation} operation />\r\n                <Button label=\"0\" click={this.addDigit} double />\r\n                <Button label=\".\" click={this.addDigit} />\r\n                <Button label=\"=\" click={this.setOperation} operation />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}